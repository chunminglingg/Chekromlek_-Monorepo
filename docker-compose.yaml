# version: "3.8"
# services:
#   # 1. RabbitMQ - A messaging service
#   rabbitmq:
#     container_name: rabbitmq_container
#     image: rabbitmq:3.13-rc-management-alpine
#     restart: always
#     environment:
#       - RABBITMQ_DEFAULT_USER=myuser # Set default RabbitMQ user
#       - RABBITMQ_DEFAULT_PASS=mypassword # Set default RabbitMQ password
#     ports:
#       - "5672:5672" # AMQP protocol port
#       - "15672:15672" # Management UI port
#     healthcheck:
#       test: ["CMD", "rabbitmqctl", "status"]
#       interval: 30s
#       timeout: 10s
#       retries: 5

#   # 2. Gateway - API Gateway service
#   gateway:
#     container_name: gateway_container
#     build:
#       context: ./packages/api-gateway # Path to the gateway's code
#       dockerfile: Dockerfile.dev # Dockerfile to use for building the gateway
#     restart: always
#     ports:
#       - 3000:3000 # Map port 3000 of the container to port 3000 on the host
#     env_file: ./packages/api-gateway/configs/.env # Environment variables file
#     environment:
#       - DOCKER_ENV=true # Indicate that it's a Docker environment
#       - AUTH_SERVICE_URL=http://auth:3001 # URL for the Auth service
#       - USER_SERVICE_URL=http://user-profile:4000 # URL for the User Profile service
#       - NOTIFICATION_SERVICE_URL=http://notification:3002 # URL for the Notification service
#       - POST_SERVICE_URL=http://post:3005 
#       - CLIENT_URL=http://localhost:9000
#     secrets:
#       - jwt_public_key # Use JWT public key secret
#     volumes:
#       - ./packages/api-gateway/src:/app/src # Mount the gateway code directory

#   # 3. Auth - Authentication service
#   auth:
#     container_name: auth_container
#     build:
#       context: ./packages/auth # Path to the auth service's code
#       dockerfile: Dockerfile.dev # Dockerfile to use for building the auth service
#     restart: always
#     ports:
#       - 3001:3001 # Map port 3001 of the container to port 3001 on the host
#     env_file: ./packages/auth/configs/.env # Environment variables file
#     environment:
#       - DOCKER_ENV=true # Indicate that it's a Docker environment
#     secrets:
#       - jwt_private_key # Use JWT private key secret
#     depends_on:
#       - rabbitmq
#     volumes:
#       - ./packages/auth/src:/app/src # Mount the auth service code directory
#       - ./packages/auth/dist:/app/dist

#   # 4. User Profile - User profile service
#   user-profile:
#     container_name: user-profile_container
#     build:
#       context: ./packages/users # Path to the user profile service's code
#       dockerfile: Dockerfile.dev # Dockerfile to use for building the user profile service
#     restart: always
#     ports:
#       - 4000:4000 # Map port 4000 of the container to port 4000 on the host
#     env_file: ./packages/users/configs/.env # Environment variables file
#     volumes:
#       - ./packages/users/src:/app/src # Mount the user profile service code directory
#       - ./packages/users/dist:/app/dist
   
#   # 5. Notification - Notification sending service
#   notification:
#     container_name: notification_container
#     build:
#       context: ./packages/notification # Path to the notification service's code
#       dockerfile: Dockerfile.dev # Dockerfile to use for building the notification service
#     restart: always
#     ports:
#       - 3002:3002 # Map port 3002 of the container to port 3002 on the host
#     env_file: ./packages/notification/configs/.env # Environment variables file
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#     environment:
#       - DOCKER_ENV=true # Indicate that it's a Docker environment
#       - API_GATEWAY=http://gatway:3000 # URL for the Auth service
#     volumes:
#       - ./packages/notification/src:/app/src # Mount the notification service code directory

#   # 6. Post - Post service
#   post:
#     container_name: post_container
#     build:
#       context: ./packages/post # Path to the post service's code
#       dockerfile: Dockerfile.dev  # Use the Dockerfile created for the "post" service
#     restart: always
#     ports:
#       - 3005:3005 # Map port 3005 of the container to port 3005 on the host
#     env_file: ./packages/post/configs/.env # Environment variables file
#     volumes:
#       - ./packages/post/src:/app/src # Mount the post service code directory
#       - ./packages/post/dist:/app/dist

# # Secrets - Securely store sensitive data
# secrets:
#   jwt_public_key:
#     file: .packages/api-gateway/public_key.pem # Path to JWT public key file
#   jwt_private_key:
#     file: .packages/auth/private_key.pem # Path to JWT private key file


version: "3.8"
services:
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  gateway:
    container_name: gateway_container
    build:
      context: ./packages/api-gateway
      dockerfile: Dockerfile.dev
    image: chekromlek-monorepo-gateway
    restart: always
    ports:
      - 3000:3000
    env_file: ./packages/api-gateway/configs/.env
    environment:
      - DOCKER_ENV=true
      - AUTH_SERVICE_URL=http://auth:3001
      - USER_SERVICE_URL=http://user-profile:4000
      - NOTIFICATION_SERVICE_URL=http://notification:3002
      - POST_SERVICE_URL=http://post:3005
      - CLIENT_URL=http://localhost:9000
    secrets:
      - jwt_public_key
    volumes:
      - ./packages/api-gateway/src:/app/src

  auth:
    container_name: auth_container
    build:
      context: ./packages/auth
      dockerfile: Dockerfile.dev
    image: chekromlek-monorepo-auth
    restart: always
    ports:
      - 3001:3001
    env_file: ./packages/auth/configs/.env
    environment:
      - DOCKER_ENV=true
    secrets:
      - jwt_private_key
    depends_on:
      - rabbitmq
    volumes:
      - ./packages/auth/src:/app/src
      - ./packages/auth/dist:/app/dist

  user-profile:
    container_name: user-profile_container
    build:
      context: ./packages/users
      dockerfile: Dockerfile.dev
    image: chekromlek-monorepo-user-profile
    restart: always
    ports:
      - 4000:4000
    env_file: ./packages/users/configs/.env
    volumes:
      - ./packages/users/src:/app/src
      - ./packages/users/dist:/app/dist

  notification:
    container_name: notification_container
    build:
      context: ./packages/notification
      dockerfile: Dockerfile.dev
    image: chekromlek-monorepo-notification
    restart: always
    ports:
      - 3002:3002
    env_file: ./packages/notification/configs/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DOCKER_ENV=true
      - API_GATEWAY=http://gateway:3000
    volumes:
      - ./packages/notification/src:/app/src

  post:
    container_name: post_container
    build:
      context: ./packages/post
      dockerfile: Dockerfile.dev
    image: chekromlek-monorepo-post
    restart: always
    ports:
      - 3005:3005
    env_file: ./packages/post/configs/.env
    volumes:
      - ./packages/post/src:/app/src
      - ./packages/post/dist:/app/dist

secrets:
  jwt_public_key:
    file: .packages/api-gateway/public_key.pem
  jwt_private_key:
    file: .packages/auth/private_key.pem
